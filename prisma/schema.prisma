// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma

// User model
model User {
  id           Int           @id @unique @default(autoincrement())
  uuid         String @unique  @default(uuid()) 
  username     String ?       @unique
  email        String ?       @unique
  password     String?
  firstname     String?
  token String ? @default(uuid())
  lastname    String?
  balance    Int?
  isverified Boolean @default(true)
  isbanner Boolean @default(false)
  totaldepo    Int?
  totalwith    Int?
  totalearn    Int?
  profileImage String?
  Doposite     Deposite[]     @relation("UserDeposites")
  withdrawal     withdrawal[]    @relation("Userwith")
  investment     Personinvested[]    @relation("investmenss")

  createdAt    DateTime      @default(now())
 
  notifications     Notification[] @relation("UserNotification")
}

model sitedetails{
  uuid String @unique @id @default(uuid()) 
  name String ?
  address String ?
  phone String ?
  logo String ?
  logo2 String ?
  createdAt    DateTime      @default(now())
  updated    DateTime      @updatedAt 

}
model Wallet{
  uuid String @unique @id @default(uuid()) 
  name String ?
  address String ?
  logo2 String ?
  Dopositeinto     Deposite    @relation(fields: [uuid], references: [depositeid])
  createdAt    DateTime      @default(now())
  updated    DateTime      @updatedAt 

}
model investmentplan{
  id Int @unique @id @default(autoincrement())
  uuid String @unique  @default(uuid()) 
  name String 
  min Int  
  max Int  
  for Int  
  every Int 
  isverified Boolean @default(true)

  logo String ?
  createdAt    DateTime      @default(now())
  updated    DateTime      @updatedAt 
  Personinvestedplan Personinvested? @relation("Personinvestedxx")

}
model Personinvested{
  uuid String @id @unique  @default(uuid()) 
  userid  Int ?  @unique
  plsnid  Int ?  @unique
  isverified Boolean @default(true)

  plan  investmentplan?  @relation(fields: [plsnid], references: [id], name: "Personinvestedxx")
  user  User?  @relation(fields: [userid], references: [id], name: "investmenss")
  
}

model Notification{
  id Int @unique @id @default(autoincrement())
  uuid String @unique  @default(uuid()) 
  userId      Int?
  isverified Boolean @default(true)

  user        User?     @relation(fields: [userId], references: [id], name: "UserNotification")
  title String 
  message String 
  createdAt    DateTime      @default(now())
  updated    DateTime      @updatedAt 

}
model Deposite{
  id Int @unique @id @default(autoincrement())
  depositeid String @unique  @default(uuid()) 
  userId      Int?
  walletId      Int?
  user        User?     @relation(fields: [userId], references: [id], name: "UserDeposites")
  thewallet        Wallet  ?
  amount Int 
  approved String ?
  createdAt    DateTime      @default(now())
  updated    DateTime      @updatedAt 

}
model withdrawal{
  id Int @unique @id @default(autoincrement())
  withdrwalid String @unique  @default(uuid()) 
  userId      Int?
  amount Int ?
  user        User?     @relation(fields: [userId], references: [id], name: "Userwith")
  wallet String ?
  approved String ?
  createdAt    DateTime      @default(now())
  updated    DateTime      @updatedAt 

}